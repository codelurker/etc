(in-package :stumpwm)

(set-prefix-key (kbd "C-t"))

;; Move the focus and then move the mouse to that window
(defcommand move-focus-warp (dir) ((:direction "Direction:"))
  (move-focus-and-or-window dir)
  (banish-pointer :window))

(defcommand firefox () ()
  (run-or-raise "firefox" '(:class "Firefox")))

(defcommand xterm-1 () ()
  "run an xterm instance"
  (run-or-raise "xterm -name xterm1" '(:instance "xterm1")))


;; Window movement keys

(define-key *top-map* (kbd "s-Left") "move-focus-warp left")
(define-key *top-map* (kbd "s-S-Left") "move-window left")

(define-key *top-map* (kbd "s-Right") "move-focus-warp right")
(define-key *top-map* (kbd "s-S-Right") "move-window right")

(define-key *top-map* (kbd "s-Up") "move-focus-warp up")
(define-key *top-map* (kbd "s-S-Up") "move-window up")

(define-key *top-map* (kbd "s-Down") "move-focus-warp down")
(define-key *top-map* (kbd "s-S-Down") "move-window down")

;; Window Cycling

(define-key *top-map* (kbd "s-Tab") "next-in-frame")
(define-key *top-map* (kbd "s-ISO_Left_Tab") "prev-in-frame")     ;; this is Shift Tab

;;; Group switching

;; Super-Fxx will switch to the relevant group
(dotimes (i 9)
  (unless (eq i 0) ; F0 is non-existant and will error.
    (define-key *top-map* (kbd (format nil "s-~a" i)) (format nil "gselect ~a" i))))

(define-key *top-map* (kbd "C-s-Left") "gprev")
(define-key *top-map* (kbd "C-s-Right") "gnext")
(define-key *top-map* (kbd "s-z") "gother")
(define-key *top-map* (kbd "s-g") "grouplist")

(define-key *root-map* (kbd "C-#") "pull-marked")

;; Turn on click to focus
(setf *mouse-focus-policy* :click)

;;; Theme.

(defparameter *foreground-color* "black")
(defparameter *background-color* "gray")
(defparameter *border-color* "dark gray")

(set-msg-border-width 2)
(setf *message-window-padding* 2)
(setf *message-window-gravity* :center)
(setf *input-window-gravity* :center)
(setf *window-border-style* :thin)

;; Window border colors.
(set-focus-color "red")
(set-unfocus-color "dark gray")

;; Input box colors.
(set-fg-color *foreground-color*)
(set-bg-color *background-color*)
(set-border-color *border-color*)

;; Modeline colors.
(setf *mode-line-foreground-color* *foreground-color*)
(setf *mode-line-background-color* *background-color*)
(setf *mode-line-border-color* *border-color*)

(set-font "smoothansi")

;;; Application shortcuts

(define-key *top-map* (kbd "s-c") "exec xterm")
(define-key *top-map* (kbd "s-f") "firefox")
(define-key *top-map* (kbd "s-r") "loadrc")
(define-key *top-map* (kbd "s-e") "emacs")
(define-key *top-map* (kbd "s-t") "xterm-1")
(define-key *top-map* (kbd "s-w") "windowlist")
(define-key *top-map* (kbd "s-s") "exec sshmenu")
